steps:
  # pull cache
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args: [ '-c', 'docker pull $_GCR_IMAGE_PATH || exit 0' ]
    id: 'pull-server'
    waitFor: [ '-' ]

  # build
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'build', '-t', '$_GCR_IMAGE_PATH:$TAG_NAME',
            '-t', '$_GCR_IMAGE_PATH',
            '--cache-from', '$_GCR_IMAGE_PATH',
            '--file', './server/Dockerfile', '.' ]
    id: 'build-server'
    waitFor:
      - 'pull-server'

  # save
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'push', '$_GCR_IMAGE_PATH:$TAG_NAME' ]
    id: 'save-server-tag'
    waitFor:
      - 'build-server'
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'push', '$_GCR_IMAGE_PATH' ]
    id: 'save-server-latest'
    waitFor:
      - 'build-server'

  # deploy
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: ['run', 'deploy', '$_CLOUD_RUN_NAME', '--image', '$_GCR_IMAGE_PATH:$TAG_NAME', '--region', '$_CLOUD_RUN_REGION', '--update-env-vars', 'REACT_APP_FRAME_ONE_PLACEHOLDER_VERSION=$TAG_NAME']
    id: 'deploy-server'
    waitFor:
      - 'save-server-tag'


images:
  - $_GCR_IMAGE_PATH:$TAG_NAME
  - $_GCR_IMAGE_PATH

timeout: 300s
